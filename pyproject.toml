[tool.poetry]
name = "valami"
version = "0.3.2"
description = ""
authors = ["Lajos Seyler <lajos.seyler@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.1.1"
djangorestframework = "^3.15.2"
markdown = "^3.7"
django-filter = "^24.3"
psycopg = {extras = ["binary"], version = "^3.2.2"}
django-environ = "^0.11.2"
celery = "^5.4.0"
django-celery-beat = "^2.7.0"
kombu = "^5.4.2"
redis = "^5.0.8"
django-redis = "^5.4.0"
flower = "^2.0.1"
gunicorn = "^23.0.0"
uvicorn = "^0.30.6"
uvicorn-worker = "^0.2.0"


[tool.poetry.group.dev.dependencies]
commitizen = "^3.29.0"
pre-commit = "^3.8.0"
ruff = "^0.6.5"
pytest = "^8.3.3"
pytest-django = "^4.9.0"
watchfiles = "^0.24.0"
coverage = "^7.6.1"


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver2"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.test"

[tool.coverage.run]
source = ["valami"]
omit = ["*/migrations/*", "*/tests/*"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "**/migrations/*.py",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"